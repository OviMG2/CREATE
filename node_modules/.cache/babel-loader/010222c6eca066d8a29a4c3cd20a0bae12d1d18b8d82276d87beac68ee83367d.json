{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crina Maria\\\\Desktop\\\\my_app\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Dashboard.module.scss';\nimport { Button, TextField, Typography, Grid, InputAdornment, IconButton, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { AccountCircle, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useNavigate } from 'react-router-dom'; // Importăm useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [acceptConditions, setAcceptConditions] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate(); // Utilizăm useNavigate pentru a redirecționa\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    if (!acceptConditions) {\n      alert(\"You must accept the terms and conditions\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3001/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Registration successful');\n        navigate('/login');\n      } else {\n        alert(result.error || 'Registration failed');\n      }\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleSwitchToLogin = () => {\n    // Logica pentru redirecționarea către pagina de login poate fi adăugată aici\n    navigate('/login'); // Redirecționează către ruta '/login'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboardContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titleWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"CREATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.description,\n        children: \"Embedding advanced urban material stock methods within governance processes to enable circular economy and cities resilience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: styles.label,\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"firstName\",\n                name: \"firstName\",\n                autoFocus: true,\n                value: firstName,\n                onChange: e => setFirstName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: styles.label,\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"lastName\",\n                name: \"lastName\",\n                value: lastName,\n                onChange: e => setLastName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: styles.label,\n                children: \"Username/Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                id: \"username\",\n                name: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 45\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: styles.label,\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                type: showPassword ? \"text\" : \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"toggle password visibility\",\n                      onClick: handleClickShowPassword,\n                      edge: \"end\",\n                      children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 69\n                      }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 89\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 45\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: styles.label,\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                margin: \"normal\",\n                required: true,\n                fullWidth: true,\n                name: \"confirmPassword\",\n                type: showPassword ? \"text\" : \"password\",\n                id: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: acceptConditions,\n                  onChange: e => setAcceptConditions(e.target.checked),\n                  name: \"acceptConditions\",\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this),\n                label: \"Accept terms and conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: `${styles.signUpButton} customSignUpButton`,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSwitchToLogin,\n              className: `${styles.signInButton} customSignInButton`,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"WAJ9n9DI8lKqKNQqp5Pe7sFYUww=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","styles","Button","TextField","Typography","Grid","InputAdornment","IconButton","FormControlLabel","Checkbox","AccountCircle","Visibility","VisibilityOff","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","firstName","setFirstName","lastName","setLastName","confirmPassword","setConfirmPassword","acceptConditions","setAcceptConditions","username","setUsername","password","setPassword","showPassword","setShowPassword","navigate","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","ok","error","console","handleClickShowPassword","show","handleSwitchToLogin","className","dashboardContainer","children","titleWrapper","title","fileName","_jsxFileName","lineNumber","columnNumber","description","container","onSubmit","spacing","alignItems","item","xs","variant","label","margin","required","fullWidth","id","name","autoFocus","value","onChange","target","InputProps","startAdornment","position","type","autoComplete","onClick","edge","control","checked","color","signUpButton","signInButton","_c","$RefreshReg$"],"sources":["C:/Users/Crina Maria/Desktop/my_app/src/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Dashboard.module.scss';\r\nimport { Button, TextField, Typography, Grid, InputAdornment, IconButton, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { AccountCircle, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useNavigate } from 'react-router-dom'; // Importăm useNavigate\r\n\r\nfunction Dashboard() {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [acceptConditions, setAcceptConditions] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const navigate = useNavigate(); // Utilizăm useNavigate pentru a redirecționa\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (password !== confirmPassword) {\r\n          alert(\"Passwords do not match\");\r\n          return;\r\n        }\r\n    \r\n        if (!acceptConditions) {\r\n          alert(\"You must accept the terms and conditions\");\r\n          return;\r\n        }\r\n    \r\n        try {\r\n          const response = await fetch('http://localhost:3001/register', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n          });\r\n    \r\n          const result = await response.json();\r\n          if (response.ok) {\r\n            alert('Registration successful');\r\n            navigate('/login');\r\n          } else {\r\n            alert(result.error || 'Registration failed');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error during registration:', error);\r\n        }\r\n      };\r\n    \r\n      const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n    \r\n\r\n    const handleSwitchToLogin = () => {\r\n        // Logica pentru redirecționarea către pagina de login poate fi adăugată aici\r\n        navigate('/login'); // Redirecționează către ruta '/login'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dashboardContainer}>\r\n            <div className={styles.titleWrapper}>\r\n                <div className={styles.title}>CREATE</div>\r\n                <span className={styles.description}>\r\n                    Embedding advanced urban material stock methods within governance\r\n                    processes to enable circular economy and cities resilience\r\n                </span>\r\n            </div>\r\n\r\n            <div className={styles.container}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                            <Typography variant=\"body1\" className={styles.label}>\r\n                                First Name\r\n                            </Typography>\r\n                                <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"body1\" className={styles.label}>\r\n                                    Last Name\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    name=\"lastName\"\r\n                                    value={lastName}\r\n                                    onChange={(e) => setLastName(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"body1\" className={styles.label}>\r\n                                    Username/Email\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    value={username}\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <AccountCircle />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"body1\" className={styles.label}>\r\n                                    Password\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handleClickShowPassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"body1\" className={styles.label}>\r\n                                    Confirm Password\r\n                                </Typography>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"confirmPassword\"\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    id=\"confirmPassword\"\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={acceptConditions}\r\n                                            onChange={(e) => setAcceptConditions(e.target.checked)}\r\n                                            name=\"acceptConditions\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label=\"Accept terms and conditions\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Button type=\"submit\" className={`${styles.signUpButton} customSignUpButton`}>\r\n                                Submit\r\n                            </Button>\r\n                            {/* Butonul Back care va redirecționa către pagina de login */}\r\n                            <Button onClick={handleSwitchToLogin} className={`${styles.signInButton} customSignInButton`}>\r\n                                Back\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}