{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crina Maria\\\\Desktop\\\\my_app\\\\src\\\\Forgot-password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, TextField, Typography, Container, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Aici ar trebui să adaugi logica pentru a trimite cererea de resetare a parolei către backend sau pentru a gestiona resetarea parolei\n    console.log(\"Submit form for password reset with email:\", email);\n    // Exemplu simplu de redirecționare după trimiterea cererii\n    navigate(\"/login\"); // Redirecționează către pagina de login după ce se trimite cererea\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoFocus: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Send Reset Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"BtHh1nUgD6Q6OqHFh/Muz7TKLH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","Button","TextField","Typography","Container","Grid","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","navigate","handleSubmit","e","preventDefault","console","log","component","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","alignItems","item","xs","margin","required","fullWidth","id","label","name","autoFocus","value","onChange","target","type","color","_c","$RefreshReg$"],"sources":["C:/Users/Crina Maria/Desktop/my_app/src/Forgot-password.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, TextField, Typography, Container, Grid } from \"@mui/material\";\r\n\r\nfunction ForgotPassword() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Aici ar trebui să adaugi logica pentru a trimite cererea de resetare a parolei către backend sau pentru a gestiona resetarea parolei\r\n        console.log(\"Submit form for password reset with email:\", email);\r\n        // Exemplu simplu de redirecționare după trimiterea cererii\r\n        navigate(\"/login\"); // Redirecționează către pagina de login după ce se trimite cererea\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    Reset Password\r\n                </Typography>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoFocus\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs={12}>\r\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n                                Send Reset Link\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}