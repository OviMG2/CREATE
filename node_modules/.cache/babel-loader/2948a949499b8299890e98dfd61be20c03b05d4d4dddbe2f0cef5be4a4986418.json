{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crina Maria\\\\Desktop\\\\my_app\\\\src\\\\Forgot-password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, TextField, Typography, Container, Grid, CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [isEmailSent, setIsEmailSent] = useState(false); // Starea pentru a indica dacă email-ul a fost trimis\n  const [isLoading, setIsLoading] = useState(false); // Starea pentru a indica încărcarea în timpul trimiterii\n\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Simulăm o încărcare pentru trimiterea email-ului\n    setIsLoading(true);\n    setTimeout(() => {\n      // Aici ar trebui să adaugi logica pentru a trimite cererea de resetare a parolei către backend sau pentru a gestiona resetarea parolei\n      console.log(\"Submit form for password reset with email:\", email);\n      // Exemplu simplu de marcarea că email-ul a fost trimis cu succes\n      setIsEmailSent(true);\n      setIsLoading(false);\n    }, 2000); // Simulăm o întârziere de 2 secunde pentru trimiterea cererii\n  };\n  const handleBack = () => {\n    navigate(\"/login\"); // Redirecționează către pagina de login\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), !isEmailSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoFocus: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              disabled: isLoading,\n              children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 50\n              }, this) : \"Send Reset Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          gutterBottom: true,\n          children: [\"An email with instructions to reset your password has been sent to \", email, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleBack,\n          variant: \"outlined\",\n          color: \"primary\",\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ForgotPassword, \"usxXoRvoFSfqgGCJWZ7gm5t+yi8=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","Button","TextField","Typography","Container","Grid","CircularProgress","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","isEmailSent","setIsEmailSent","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","setTimeout","console","log","handleBack","component","maxWidth","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","alignItems","item","xs","margin","required","fullWidth","id","label","name","autoFocus","value","onChange","target","type","color","disabled","size","gutterBottom","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Crina Maria/Desktop/my_app/src/Forgot-password.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, TextField, Typography, Container, Grid, CircularProgress } from \"@mui/material\";\r\n\r\nfunction ForgotPassword() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isEmailSent, setIsEmailSent] = useState(false); // Starea pentru a indica dacă email-ul a fost trimis\r\n    const [isLoading, setIsLoading] = useState(false); // Starea pentru a indica încărcarea în timpul trimiterii\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Simulăm o încărcare pentru trimiterea email-ului\r\n        setIsLoading(true);\r\n        setTimeout(() => {\r\n            // Aici ar trebui să adaugi logica pentru a trimite cererea de resetare a parolei către backend sau pentru a gestiona resetarea parolei\r\n            console.log(\"Submit form for password reset with email:\", email);\r\n            // Exemplu simplu de marcarea că email-ul a fost trimis cu succes\r\n            setIsEmailSent(true);\r\n            setIsLoading(false);\r\n        }, 2000); // Simulăm o întârziere de 2 secunde pentru trimiterea cererii\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate(\"/login\"); // Redirecționează către pagina de login\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div>\r\n                <Typography variant=\"h5\">\r\n                    Reset Password\r\n                </Typography>\r\n                {!isEmailSent ? (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoFocus\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    fullWidth\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {isLoading ? <CircularProgress size={24} /> : \"Send Reset Link\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                ) : (\r\n                    <div>\r\n                        <Typography variant=\"body1\" gutterBottom>\r\n                            An email with instructions to reset your password has been sent to {email}.\r\n                        </Typography>\r\n                        <Button onClick={handleBack} variant=\"outlined\" color=\"primary\">\r\n                            Back to Login\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}